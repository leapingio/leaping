import argparse
from socket import socket, AF_INET, SOCK_STREAM
import threading
import time
from prompt_toolkit import prompt

def spinner(message="Loading..."):
    spinner_chars = ['|', '/', '-', '\\']
    idx = 0
    while not stop_spinner.is_set():
        print(f"\r{message} {spinner_chars[idx % len(spinner_chars)]}", end='')
        idx += 1
        time.sleep(0.1)
    print('\r', end='')

def main():
    parser = argparse.ArgumentParser(description="W")
    parser.add_argument('-p', '--port', type=int, help='The temporary file generated by pytest-leaping', required=True)

    args = parser.parse_args()
    if not args.port:
        raise ValueError("Port number not provided. Exiting...")

    global stop_spinner
    stop_spinner = threading.Event()

    print(""" 
 _                     _             
| |    ___  __ _ _ __ (_)_ __   __ _ 
| |   / _ \\/ _` | '_ \\| | '_ \\ / _` |
| |__|  __/ (_| | |_) | | | | | (_| |
|_____\\___|\\__,_| .__/|_|_| |_|\\__, |
                |_|            |___/ 
""")

    spinner_thread = threading.Thread(target=spinner, args=("Thinking...",))
    spinner_thread.start()

    sock = socket(AF_INET, SOCK_STREAM)
    sock.connect(('localhost', args.port))

    first_response = sock.recv(2048)
    stop_spinner.set() 
    spinner_thread.join()

    print("\033[92mExplanation: " + first_response.decode("utf-8"))

    while True:
        user_input = prompt("\nIf the explanation is wrong, say why and we'll try again. Press q to exit: ")
        if user_input.strip() == "q":
            sock.sendall(b"exit")
            break
        sock.sendall(user_input.encode("utf-8"))
        response = sock.recv(2048)
        print(response.decode("utf-8"))
